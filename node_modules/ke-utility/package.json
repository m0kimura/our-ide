{
  "_args": [
    [
      {
        "raw": "ke-utility@file:///home/kimura/github/ke-utility",
        "scope": null,
        "escapedName": "ke-utility",
        "name": "ke-utility",
        "rawSpec": "file:///home/kimura/github/ke-utility",
        "spec": "/home/kimura/github/ke-utility",
        "type": "directory"
      },
      "/home/kimura/github/ke-chatwork"
    ]
  ],
  "_from": "../../../github/ke-utility",
  "_id": "ke-utility@1.1.2",
  "_inCache": true,
  "_location": "/ke-utility",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ke-utility@file:///home/kimura/github/ke-utility",
    "scope": null,
    "escapedName": "ke-utility",
    "name": "ke-utility",
    "rawSpec": "file:///home/kimura/github/ke-utility",
    "spec": "/home/kimura/github/ke-utility",
    "type": "directory"
  },
  "_requiredBy": [
    "/ke-chatwork"
  ],
  "_resolved": "file:../../../github/ke-utility",
  "_shasum": "ffa05406454c6ebb5016505ff8611a7c67d11ad1",
  "_shrinkwrap": null,
  "_spec": "ke-utility@file:///home/kimura/github/ke-utility",
  "_where": "/home/kimura/github/ke-chatwork",
  "author": {
    "name": "michihiro kimura",
    "email": "kimura@kmrweb.net"
  },
  "dependencies": {
    "fibers": "^2.0.0"
  },
  "description": "Kmrweb.net universal utility ",
  "devDependencies": {},
  "engines": {
    "node": ">=0.5.2"
  },
  "gitHead": "9bb4e61fe751c24c796b17e8beecc220bf9e08c9",
  "homepage": "http://www.kmrweb.net/server/ke-utility.html",
  "keywords": [
    "ke-utility"
  ],
  "license": "MIT",
  "main": "./ke-utility.js",
  "name": "ke-utility",
  "optionalDependencies": {},
  "readme": "#ke-utility\n\nNODEJS 基本ルール\n\n##これは何\n\n様々な基本となる機能を提供する nodejs です。　Kmrweb Dot Net http://www.kmrweb.net/server/ をご覧下さい。\n\n##動作環境\n\n* ubuntu 14.04\n* Node.js v0.10.26\n\n##使い方\n\n_MAIN_ メインルーチンはこの中に記述します。  \n  `uty.MAIN(function(){`  \n  `  ...`  \n  `  ...`  \n   `});`  \n  \n_argv(n)_ n個目の引数を取り出します。\n\n##環境変数\n  RUNCONFIG configファイルのパスを指定しておきます。(例 /home/kimura/ha-project.config)\n  RUNMODE   [master]本番,[test]結合テストなど、指定されていないときはdebugモードとなります。\n「.bashrc」にexportで指定しておく。\n\n実行パラメータの設定\n  dbdriver    使用DB [postgre]\n  admin       管理者ID\n  psw         パスワード\n  service     通知サービス[gmail]\n  level       メッセージレベル[warn]\n  log         ログファイルパス[*.log]\n  path        実行フルパス\n  pid         プロセスID\n  current     実行フォルダ\n  apli        実行ファイル名\n  groupid     グループ番号\n  uid         ユーザー番号\n  platform    OS\n  user        ユーザーID\n  home        ホームパス\n  config      実行パラメータフルパス\n  groupid     実行グループ\n  dictionary  辞書ファイルフルパス\n  \n  その他共通パラメータを定義しておきます。\n\n  group       groupid\n  valid       有効期間(15/01/01:15/02/28)\n\n##関数\n\n  localconf   ローカル実行環境ファイルを読み込みます。[JSON形式]\n              ({\n                fn:     ファイルフルパス[*.log],\n                infoj:  true INFOJに設定する,[RETURNで返します],\n                stop:   true(重大エラー処理を実行します)/[false](errorをセットして空を返す)\n              })\n              RETURN \n\n  dict        辞書変換をします。\n              (\n                対象キー,\n                国コード\n              )\n              RETURN 変換後ワード\n\n  argv        起動引数の取り出し\n              (\n                起動引数の位置1,...\n              )\n\n  develop     テンプレートの展開\n              (\n                テンプレートファイルパス,\n                [データ域]（me.REC）,\n                [インデックス値](0)\n              )\n\n  parm        パラメータを展開する\n              #{} INFOJから展開\n              %{} RECから展開\n              ${} SCREENから展開\n              &{} CFGから展開\n              (\n                展開対象領域,\n                [％パラメータソース省略時はREC],\n                [インデックス値0]\n              )\n\n  parse       URL?querystringをパースします。\n              (\n                query文字列\n              )\n              RETURN キーワード配列\n\n  stringify   URK?querystringを作ります\n              (\n                キーワード配列\n              )\n              RETURN query文字列\n\n  unstring    文字列をスペースデリミタで分解\n              (\n                文字列\n              )\n              RETURN 配列\n\n　lastOf      文字列中の指定文字の最終出現位置\n              (\n                対象文字列,\n                指定文字\n              )\n              RETURN 最終出現位置（ないときは-1）\n\n  pullDir     フルパスからディレクトリ部分を取り出す\n              (\n                フルパス\n              )\n              RETURN ディレクトリ部分\n\n  repby       対象文字列中の指定文字列を置き換え文字列に置き換える\n              (\n                対象文字列,\n                指定文字列,\n                置き換え文字列\n              )\n              RETURN 結果文字列\n\n  separate    対象文字列を指定文字で、前後２つに分離する\n              (\n                対象文字列,\n                指定文字\n              )\n              RETURN 結果配列[前, 後]\n\n  modifier    ファイル名から接尾拡張子を取り出す\n              (\n                ファイル名\n              )\n              RETURN 接尾拡張子\n\n  filepart    ファイル名から本体部分を取り出す\n              (\n                ファイル名\n              )\n              RETURN ファイル本体部分\n\n  pathpart    ファイルフルパスからパス部分を取り出す\n              (\n                ファイル名\n              )\n              RETURN パス部分\n\n  date        日付編集YyMmDdHhIiSsWw\n              Y:年４桁,y:年２桁,M:月２桁,m:月,D:日２桁,d:日,H:時2桁,h:時,I:分２桁,i:分,S:秒２桁,s:秒\n              W:曜日（漢字）,w:曜日(英)\n              (\n                編集文字列,\n                対象時間[現在時間]\n              )\n  \n  today       今日の日付をY/M/Dで返す\n              ()\n\n  now         今の時間をH/I/Sで返す\n              ()\n\n  isExist     ファイルの存在確認\n              (\n                ファイルフルパス\n              )\n              RETURN true/false\n\n  dir         ディレクトリリスト\n              (\n                対象パス,\n                ['file'/'dir']省略時は混合\n              )\n              RETURN 配列\n\n  stat        ファイルの属性情報を返す\n              (\n                ファイルフルパス\n              )\n              RETURN キーワード配列/false\n\n  getCsv      ｃｓｖファイルを読み込み、RECインターフェイスに編集\n              (\n                ファイルフルパス\n              )\n              RETURN レコード件数/false\n\n  getObject   JSON形式ファイル読み込み、RECインターフェイスに編集\n              (\n                ファイルフルパス\n              )\n              RETURN レコード件数/false\n\n  getIp       自分のIpアドレスを返します\n              ()\n              RETURN IPアドレス\n\n  shell       シェルコマンドを実行します。(完了を待ち合わせます)\n              (\n                シェルコマンド\n              )\n              RETURN true/false\n\n  \n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.org/m0kimura/ke-utility.git"
  },
  "version": "1.1.2"
}
